-- Select all rows from the classes table.
SELECT * FROM students;
SELECT * FROM addresses;
SELECT * FROM classes;
SELECT * FROM enrollments;

-- Select the name and credits from the classes table where the number of credits is greater than 3.
SELECT "name", credits FROM classes WHERE credits > 3;

-- All rows from the classes table where credits is an even number.
SELECT * FROM classes WHERE mod(credits, 2) = 0;

-- All of Tianna's enrollments that she hasn't yet received a grade for.
SELECT * FROM enrollments WHERE student_id = 1 AND grade is NULL;

-- All of Tianna's enrollments that she hasn't yet received a grade for, selected by her first name, not her student.id
SELECT * FROM enrollments
INNER JOIN students ON enrollments.student_id = students.id
WHERE first_name = 'Tianna'
AND grade is NULL;

-- All of Tianna's enrollments that she hasn't yet received a grade for, selected by her first name, not her student.id, with the class name included in the result set.
SELECT * FROM enrollments
INNER JOIN
students ON enrollments.student_id = students.id
INNER JOIN
classes ON enrollments.class_id = classes.id
WHERE
first_name = 'Tianna'
AND grade IS NULL;

-- All students born before 1986 who have a 't' in their first or last name.
SELECT * FROM students
WHERE
EXTRACT(YEAR FROM birthdate) < 1986
AND
first_name SIMILAR TO '%(T|t)%'
OR last_name SIMILAR TO '%(T|t)%';

-- The average age of all the students.
SELECT AVG(date_part('year', age(birthdate))) AS "Average Age" FROM students;

-- Addresses that have a space in their city name.
SELECT * FROM addresses
WHERE city SIMILAR TO '% %';

-- Students & their addresses that live in a city with more than one word in the city name.
SELECT * FROM students
INNER JOIN
addresses ON students.address_id = addresses.id
WHERE
city SIMILAR TO '% %';

-- The average number of credits for classes offered at the school.
SELECT AVG(credits) AS "Average Credits per Class" FROM classes;

-- The first and last name of all students who have received an 'A'.
SELECT students.first_name, students.last_name, grade FROM enrollments
INNER JOIN
students ON enrollments.student_id = students.id
WHERE grade = 'A';

-- Each student's first name and the total credits they've enrolled in
SELECT students.first_name, SUM(credits) AS "Total Credits Enrolled"
FROM enrollments
INNER JOIN
students ON enrollments.student_id = students.id
INNER JOIN
classes ON enrollments.class_id = classes.id
GROUP BY students.first_name;

-- The total number of credits each student has received a grade for.
SELECT students.first_name, SUM(credits) AS "Total Credits Graded"
FROM enrollments
INNER JOIN
students ON enrollments.student_id = students.id
INNER JOIN
classes ON enrollments.class_id = classes.id
WHERE enrollments.grade is NOT NULL
GROUP BY students.first_name;

-- All enrollments, including the class name.
SELECT * FROM enrollments
INNER JOIN
classes ON enrollments.class_id = classes.id;

-- Students born between 1982-1985 (inclusive).
SELECT * FROM students
WHERE EXTRACT(YEAR FROM birthdate) BETWEEN 1982 AND 1985;

-- Insert a new enrollment recording that Andre Rohan took PHYS 218 and got an A.
INSERT INTO enrollments (student_id, class_id, grade)
VALUES (
    (SELECT students.id
    FROM students
    WHERE first_name='Andre' AND last_name='Rohan'),
    
    (SELECT classes.id
    FROM classes
    WHERE name='PHYS 218'),

    'A'
)
